---
name: Draft Release

on:
  create:
      branches: [ release/*, hotfix/* ]

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    
    permissions:
      # see https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
      contents: write
      pull-requests: write
    steps:
      -
        uses: actions/checkout@v3.3.0

        # RELEASE VERSION
      -
        name: Extract version from branch name (for release branches)
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          BRANCH_NAME="${{ github.ref }}"
          VERSION=${BRANCH_NAME#refs/heads/release/}
          
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.ref, 'refs/heads/hotfix/')
        run: |
            BRANCH_NAME="${{ github.ref }}"
            VERSION=${BRANCH_NAME#refs/heads/hotfix/}
            
            echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Output release version
        run: |
            echo "::set-output name=RELEASE_VERSION::${{ env.RELEASE_VERSION }}"
      -
        name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
      -
        name: Set up JDK 11
        uses: actions/setup-java@v3.10.0
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
      -
        name: Bump version in pom.xml
        run: |-
          ./mvnw -s settings.xml -B versions:set -DnewVersion=${{ env.RELEASE_VERSION }} -DprocessAllModules
        env:
          GITHUB_PACKAGE_USERNAME: ${{ github.actor }}
          GITHUB_PACKAGE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Bump version in /charts
        uses: mikefarah/yq@v4.30.8
        with:
          cmd: |-
            find charts -name Chart.yaml | xargs -n1 yq -i '.appVersion = "${{ env.RELEASE_VERSION }}" | .version = "${{ env.RELEASE_VERSION }}"'
      -
        name: Update Chart READMEs
        uses: addnab/docker-run-action@v3
        with:
          image: jnorwood/helm-docs:v1.10.0
          options: -v ${{ github.workspace }}/charts:/helm-docs
          run: |
            helm-docs --log-level debug
      -
        name: Commit changelog and manifest files
        id: make-commit
        run: |
          git add $(find -name pom.xml) $(find charts -name Chart.yaml) $(find charts -name README.md)
          git commit --message "Prepare release ${{ env.RELEASE_VERSION }}"

          echo "::set-output name=commit::$(git rev-parse HEAD)"
      -
        name: Push new branch
        run: git push origin release/${{ env.RELEASE_VERSION }}
      -
        name: Create pull request
        uses: thomaseizinger/create-pull-request@1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: release/${{ env.RELEASE_VERSION }}
          base: main
          title: Release version ${{ env.RELEASE_VERSION }}
          reviewers: ${{ github.actor }}
          body: |-
            This PR was created in response to a manual trigger of the [release workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
            The changelog was updated and versions have been bumped in [commit ${{ steps.make-commit.outputs.commit }}](${{ steps.make-commit.outputs.commit }}).

            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
